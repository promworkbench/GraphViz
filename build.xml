<project name="GraphViz" default="Compile Sources" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
		<!-- set global properties for this build -->
		<property environment="env" />
		<property name="src" location="src" />
		<property name="build" location="bindist" />
		<property name="doc" location="doc" />
		<property name="lib" location="lib" />
		<property name="dist" location="dist" />
		<property name="release" location="latestrelease" />
		<property name="version" value="${major_minor}.${env.BUILD_NUMBER}" />
		<property name="project" value="GraphViz" />

		<!-- Set the os to win32, win64, lin32, lin64, mac, or all -->
		<property name="os" value="all" />
	
		<property name="ivy.lib.dir" value="ivy" />
		<property name="ivy.cache.dir" value="/var/lib/hudson/.ivy2/cache/${env.EXECUTOR_NUMBER}" />
		
		<property name="author" value="SJJ Leemans" />
		<property name="organization" value="Eindhoven University of Technology" />
		<property name="description" value="Inductive Miner" />
		<property name="license" value="L-GPL" />
		<property name="logo" value="http://www.promtools.org/prom6/packages/prom_subtitle_hat_300.png" />

		<!-- Compilation macro
		 This Macro compiles the sources is one ${src}-... folder.
	 The sources are compiled into the ${build} folder.
		 -->

     <path id="classpath">
 			<pathelement path="${build}" />
 			<pathelement path="${java.class.path}" />
 			<fileset dir=".">
 				<include name="ivy/**/*.jar" />
 				<include name="lib/**/*.jar" />
 				<include name="stdlib/**/*.jar" />
 				<include name="packagelib/**/*.jar" />
 			</fileset>
     </path>

		<macrodef name="compile">
			<sequential>
				<!-- Compile the java code from ${src}-@{module} into ${build} -->
				<javac srcdir="${src}" classpathref="classpath" destdir="${build}" nowarn="false" verbose="yes" debug="true" debuglevel="lines,vars,source" deprecation="yes" source="${bytecode_format}" target="${bytecode_format}">
					<!-- Check for unsafe operations -->
					<compilerarg value="-Xlint:unchecked" />
				</javac>
			</sequential>
		</macrodef>

		<!-- Jar macro

		This Macro builds a jar file from compiled sources in the ${dist} folder.
		-->
		<macrodef name="makejar">
			<sequential>
				<!-- Create the distribution directory -->
				<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
				<jar jarfile="${dist}/${project}-${DSTAMP}.jar">
					<fileset dir="${build}">
						<include name="**" />
						<exclude name="test**" />
					</fileset>
					<fileset dir="${src}">
						<include name="**" />
						<exclude name="test**" />
					</fileset>
					<fileset dir="${doc}">
						<include name="**" />
						<exclude name="test**" />
					</fileset>
					<manifest>
						<attribute name="Built-By" value="${user.name}" />
						<attribute name="Specification-Title" value="${project}-@{module}" />
						<attribute name="Specification-Version" value="${version}" />
						<attribute name="Specification-Vendor" value="www.processmining.org" />
						<attribute name="Implementation-Title" value="${project}" />
						<attribute name="Implementation-Version" value="${version} ${TODAY}" />
						<attribute name="Implementation-Vendor" value="www.processmining.org" />
						<attribute name="Sealed" value="false" />
					</manifest>
				</jar>
				<copy file="${dist}/${project}-${DSTAMP}.jar" tofile="${dist}/${project}.jar" overwrite="true" />
			</sequential>
		</macrodef>


		<!-- clean all binaries and distributions -->
		<target name="Clean build and dist folders" description="clean up" id="1">
			<!-- Delete the ${build} and ${dist} directory trees -->
			<delete dir="${build}" />
			<delete dir="${dist}" />
		</target>


		<!-- create the project's javadoc from all existing sources. Note that only org.processmining.** is included -->
		<target name="Create Javadoc" description="Generated javadoc">
			<javadoc packagenames="**" classpathref="classpath" useexternalfile="true" defaultexcludes="yes" destdir="${doc}" author="true" version="true" verbose="false" use="true" windowtitle="${project}">
				<fileset dir=".">
					<include name="src/**" />
					<exclude name="src/test/**" />
					<exclude name="**/*.jj" />
					<exclude name="**/*.jjt" />
					<exclude name="**/*.dll" />
					<exclude name="**/config6" />
					<exclude name="**/*.exe" />
					<exclude name="**/dot" />
					<exclude name="**/*.form" />
				</fileset>
			</javadoc>
		</target>

		<!-- export distribution archive -->
		<target name="Create downloadable archive" depends="Compile Sources">
			<echo message="Building zip file packaging this project" />
			<sequential>
				<delete includeEmptyDirs="true" quiet="true">
			    	<fileset dir="${release}" includes="${project}-*-${os}.zip"/>
			  	</delete>
				<zip destfile="${release}/${project}-${version}-${os}.zip">
					<zipfileset dir="${lib}" prefix="lib">
						<include name="**" />
					</zipfileset>
					<zipfileset dir="${dist}" prefix="">
						<include name="${project}.jar" />
					</zipfileset>
				</zip>
				<copy file="${dist}/${project}.jar" tofile="${release}/${project}.jar" overwrite="true" />
				<delete includeEmptyDirs="true" quiet="true">
			    	<fileset dir="${release}/lib" includes="**/*"/>
			  	</delete>
				<mkdir dir="${release}/lib"/>
				<copy todir="${release}/lib" overwrite="true">
					<fileset dir="${lib}"/>
				</copy>
				<exec executable="grep">
											<redirector output="ivypack.xml" />
											<arg value="&lt;dependency .*org=&quot;prom&quot; " />
											<arg value="ivy.xml" />
										</exec>
										<echo file="${release}/packages.xml">
									&lt;packages&gt;
											&lt;package name="${project}" version="${version}" os="${os}" url="http://www.promtools.org/prom6/packages/${project}/${project}-${version}-${os}.zip" desc="${description}" org="${organization}" license="${license}" author="${author}" auto="false" hasPlugins="true" logo="${logo}"&gt;
								</echo>
										<concat destfile="${release}/packages.xml" append="true">
											<filelist files="ivypack.xml" />
										</concat>
										<echo file="${release}/packages.xml" append="true">
										&lt;/package&gt;
									&lt;/packages&gt;
								</echo>
										<copy file="ivy.xml" tofile="${release}/ivy.xml" overwrite="true" />
			</sequential>
		</target>

		<target name="Compile Sources" depends="resolve">
			<!-- Create the build directory structure used by compile -->
			<!-- Create the time stamp -->
			<tstamp />
			<mkdir dir="${build}" />
			<mkdir dir="${dist}" />
			<echo message="Compiling the sources" />
			<compile />
			<echo message="Making jar" />
			<makejar />
		</target>

		<target name="resolve">
	        <delete includeEmptyDirs="true" quiet="true">
	            <fileset dir="${ivy.cache.dir}/prom" includes="**/*" />
	        </delete>
	        <ivy:retrieve />
	        <copy todir="lib" overwrite="true">
	            <fileset dir="ivy">
	                <include name="batik-transcoder-1.6-1.jar" />
	            	<include name="batik-bridge-1.6-1.jar" />
	            	<include name="batik-gvt-1.6-1.jar" />
	            	<include name="batik-awt-1.6-1.jar" />
	            	<include name="batik-util-1.6-1.jar" />
	            	<include name="batik-gui-util-1.6-1.jar" />
	            	<include name="batik-ext-1.6-1.jar" />
	            	<include name="xmlParserAPIs-2.0.2.jar" />
	            	<include name="batik-script-1.6-1.jar" />
	            	<include name="batik-svg-dom-1.6-1.jar" />
	            	<include name="batik-dom-1.6-1.jar" />
	            	<include name="batik-css-1.6-1.jar" />
	            	<include name="batik-xml-1.6-1.jar" />
	            	<include name="xercesImpl-2.5.0.jar" />
	            	<include name="batik-parser-1.6-1.jar" />
	            	<include name="js-1.5R4.1.jar" />
	            	<include name="fop-0.20.5.jar" />
	            	<include name="batik-1.5-fop-0.20-5.jar" />
	            	<include name="xml-apis-1.0.b2.jar" />
	            	<include name="xalan-2.4.1.jar" />
	            	<include name="avalon-framework-4.0.jar" />
	            	<include name="batik-svggen-1.6-1.jar" />
	            </fileset>
	        </copy>
	    </target>

	</project>

		
